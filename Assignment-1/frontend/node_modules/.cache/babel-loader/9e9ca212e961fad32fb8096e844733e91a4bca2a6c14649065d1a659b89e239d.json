{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exam\\\\Assignment-1\\\\frontend\\\\src\\\\pages\\\\EventList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventList() {\n  _s();\n  const [events, setEvent] = useState([]);\n  useEffect(() => {\n    const fetchevents = async () => {\n      try {\n        const response = await axios.get('http://localhost:4580/api/readEvent');\n        setEvent(response.data.results);\n      } catch (err) {\n        alert('There is an error fetching events');\n      }\n    };\n    fetchevents();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of all Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(EventList, \"SLdEuMCZ0UyOchttRstNfhfk/L8=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["axios","useEffect","useState","jsxDEV","_jsxDEV","EventList","_s","events","setEvent","fetchevents","response","get","data","results","err","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Exam/Assignment-1/frontend/src/pages/EventList.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction EventList () {\r\n\r\n    const [events, setEvent] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n       const fetchevents = async()=>{\r\n        try{\r\n            const response = await axios.get('http://localhost:4580/api/readEvent')\r\n            setEvent(response.data.results)\r\n        }catch(err){\r\n           alert('There is an error fetching events')\r\n        }\r\n       }\r\n        fetchevents();\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <h1>List of all Events</h1>\r\n            \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,SAASA,CAAA,EAAI;EAAAC,EAAA;EAElB,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEvCD,SAAS,CAAC,MAAI;IAEX,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAS;MAC5B,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qCAAqC,CAAC;QACvEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACnC,CAAC,QAAMC,GAAG,EAAC;QACRC,KAAK,CAAC,mCAAmC,CAAC;MAC7C;IACD,CAAC;IACAN,WAAW,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF,oBACIL,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAAY,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1B,CAAC;AAEd;AAACd,EAAA,CAxBQD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}